#!/bin/zsh
# original: http://hints.macworld.com/article.php?story=20011108211802830

function showHelp() {
    echo '--- Command Line iTunes Control ---';
    echo ' itunes     = Shows status, current track and volume.';
    echo ' itunes #   = Set volume level to #(0-100) percent';
    echo ' itunes bgm = Play "BGM : for Work" playlist.';
    echo ' itunes fav = Play "Song : Recently Favorited" playlist.';
    echo ' itunes t   = Toggle play/pause. If iTunes stopped, start it.';
    echo ' itunes n   = Go to the next track.';
    echo ' itunes p   = Go to the previous track.';
    echo ' itunes h   = show help informations.';
}

function getState()   { osascript -e 'tell application "iTunes" to player state as string' }
function showState()  { echo "iTunes is currently `getState`." }
function showStatus() { showState; showCurrentVolume; showTrackInfo; }

function showTrackInfo() {
    if [ `getState` != 'stopped' ]; then
        local track=`osascript -e 'tell application "iTunes" to name of current track as string'`;
        local album=`osascript -e 'tell application "iTunes" to album of current track as string'`;
        echo "Current track: $track - ($album)";
    fi
}

function showCurrentVolume() {
    local vol=`osascript -e 'tell application "iTunes" to sound volume as integer'`;
    echo "Current volume level: $vol%";
}

function play() {
    echo 'Playing iTunes.';
    osascript -e "tell application \"iTunes\" to play $1";
    showTrackInfo;
}

function toggle() {
    local state=`getState`
    if [ $state = 'playing' ]; then
        echo 'Pausing iTunes.';
        osascript -e 'tell application "iTunes" to pause';
    elif [ $state = 'paused' ]; then
        play;
    elif [ $state = 'stopped' ]; then
        echo 'iTunes currently stopped. starting iTunes.'
        play;
    fi
}

function next() {
    echo 'Going to next track.' ;
    osascript -e 'tell application "iTunes" to next track';
    showTrackInfo;
}

function previous() {
    echo 'Going to previous track.';
    osascript -e 'tell application "iTunes" to previous track';
    showTrackInfo;
}

function volume() {
    echo "Changing iTunes volume level: ${1}%";
    osascript -e "tell application \"iTunes\" to set sound volume to ${1}";
}

function quit() {
    echo 'Quitting iTunes.';
    osascript -e 'tell application "iTunes" to quit';
}

# itunes main code
if [ $# = 0 ]; then showStatus; return; fi
case $1 in
    'bgm'    ) play 'playlist "BGM : for Work"' ;;
    'fav'    ) play 'playlist "Song : Recently Favorited"' ;;
    't'      ) toggle ;;
    'n'      ) next ;;
    'p'      ) previous ;;
    <0-100> ) volume $1 ;;
    'q'      ) quit ;;
    *       ) showHelp ;;
esac

# vim: set filetype=zsh :
